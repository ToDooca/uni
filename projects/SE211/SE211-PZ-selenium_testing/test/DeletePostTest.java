// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.function.Supplier;

public class DeletePostTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
//    driver.quit();
  }
  @Test
  public void deletePost() {
    driver.get("http://localhost:3000/login/");
    driver.manage().window().maximize();
    driver.findElement(By.cssSelector("body > app-root > login-login-form > div > div > form > div:nth-child(1) > div > input")).click();
    driver.findElement(By.cssSelector(".row:nth-child(1) > .input-field > .ng-untouched")).click();
    driver.findElement(By.cssSelector(".row:nth-child(1) > .input-field > .ng-untouched")).sendKeys("admin");
    driver.findElement(By.cssSelector(".ng-untouched")).click();
    driver.findElement(By.cssSelector(".ng-untouched")).sendKeys("admin");
    driver.findElement(By.name("action")).click();

    waitUntilElement(By.cssSelector(".theme-error-text"));
    driver.findElement(By.cssSelector(".theme-error-text")).click();
    driver.findElement(By.cssSelector(".mr-2")).click();
  }

  public void waitUntil(Supplier<Boolean> cb) {
    do {
      try {
        Thread.sleep(10);
      } catch (InterruptedException e) {
        e.printStackTrace();
      }
    } while (!cb.get());
  }

  public void waitUntilElement(By selector) {
    waitUntil(() -> {
      try {
        return driver.findElement(selector) != null;
      } catch (Exception e) {
        return false;
      }
    });
  }
}
